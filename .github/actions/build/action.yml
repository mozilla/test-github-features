name: 'Docker Build'
description: 'Builds docker image'
inputs:
  node_env:
    required: false
    description: "Node environment"
    default: "production"
  latest:
    required: false
    description: "Tag latest version"
    default: "false"
  target:
    required: false
    description: "Docker stage to target"
    default: "final"

outputs:
  image:
    description: "The Docker image"
    value: ${{ steps.image.outputs.image }}
  version:
    description: "The version for the image"
    value: ${{ steps.meta.outputs.version }}
  digest:
    description: "The build digest for the image"
    value: ${{ steps.build.outputs.digest }}
  tag:
    description: "Combines image and version to a valid image tag"
    value: ${{ steps.tag.outputs.tag }}

runs:
  using: "composite"
  steps:
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    - name: Docker Image
      id: image
      shell: bash
      run: |
        echo "image=${{ github.repository }}" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ steps.image.outputs.image }}
        flavor: |
          suffix=-next,onlatest=true
          latest=${{ inputs.latest == 'true' }}
        tags: |
          type=ref,event=pr
          type=ref,event=branch
          type=ref,event=tag

    - name: Docker tag
      id: tag
      shell: bash
      run: |
        # Extract metadata output json
        cat <<EOF > meta.json
        ${{ steps.meta.outputs.json }}
        EOF

        echo "tag=$(cat meta.json | jq -r '.tags[0]')" >> $GITHUB_OUTPUT
        cat $GITHUB_OUTPUT

    - name: Tar file
      id: tar
      shell: bash
      # image.tar is the name of the compressed image file
      # This should be kept in sync with ./.github/actions/run/action.yml
      # That loads the image from this file
      run: |
        echo "path=/tmp/image.tar" >> $GITHUB_OUTPUT

    - name: Build Image
      id: build
      uses: docker/build-push-action@v6
      with:
        platforms: linux/amd64
        # Inject metadata produced earlier
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        annotations: ${{ steps.meta.outputs.annotations }}
        # Output image to a local tar file to be uploaded
        outputs: type=docker,dest=${{ steps.tar.outputs.path }}
        # Target a specified stage
        target: ${{ inputs.target }}
        push: true

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        # The artifact name should be kept in sync with
        # ./.github/actions/run/action.yml which downloads the artifact
        name: docker-image
        path: ${{ steps.tar.outputs.path }}
        retention-days: 1
        compression-level: 9
        overwrite: true

    - name: Load Docker image
      shell: bash
      run: |
        # Load the Docker image
        docker load -i /tmp/image.tar
