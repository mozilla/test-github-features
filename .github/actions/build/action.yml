name: 'Docker Build'
description: 'Builds docker image'
inputs:
  push:
    required: true
    description: "Build and push image to registry (cannot be used together with load)"
    default: "false"
  password:
    required: false
    description: "Password for the registry"
  username:
    required: false
    description: "Username for the registry"

outputs:
  tags:
    description: "The Docker tags for the image"
    value: ${{ steps.meta.outputs.tags }}

runs:
  using: "composite"
  steps:
    # Setup docker to build for multiple architectures
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1
      with:
        version: latest
        buildkitd-flags: --debug

    # Login to a registry to push the image
    - name: Login to Container Registry
      # Only login if we are pushing the image
      if: ${{ inputs.push == 'true' }}
      uses: docker/login-action@v3
      with:
        registry: ghcr.io
        username: ${{ inputs.username }}
        password: ${{ inputs.password }}

    # Determine the tags for the image
    - name: Docker meta
      id: meta
      uses: docker/metadata-action@v5
      with:
        # Hard coding our dockerhub imnage name
        images: ghcr.io/mozilla/test-github-features
        tags: |
          type=schedule
          type=ref,event=tag
          type=ref,event=branch,enable: ${{ github.ref != 'refs/heads/main' }}
          type=ref,event=pr
          type=raw,value=latest,enable={{is_default_branch}}
          type=raw,value=staging,enable=${{ contains(github.event.head_ref, 'gh-readonly-queue-main') }}

    - name: Build Image
      uses: docker/build-push-action@v5
      with:
        context: .
        platforms: linux/amd64
        pull: true
        push: ${{ inputs.push }}
        load: ${{ inputs.push == 'false' }}
        tags: ${{ steps.meta.outputs.tags }}
        cache-from: type=gha
        cache-to: type=gha,mode=max
        build-args: |
          VERSION=${{ steps.meta.outputs.tags }}
