name: Deploy

on:
  # Trigger a production deploymnent when a commit is pushed to the main branch
  push:
    branches:
      - main
  # Trigger a staging deployment when a pull request is merging
  merge_group:
  pull_request:
  # Trigger a development deployment when workflow is dispatched manually
  workflow_dispatch:

jobs:
  deploy_staging:
    strategy:
      matrix:
        environment: [production, staging, development]
    runs-on: ubuntu-latest
    environment:
      name: ${{ matrix.environment }}
      url: https://test-github-features-${{ matrix.environment}}.fly.dev
    concurrency:
      group: ${{ matrix.environment }}
      cancel-in-progress: true
    steps:
      - name: Check
        id: check
        shell: bash
        run: |
          env = ${{ matrix.environment }}
          event = ${{ github.event_name }}
          continue = false

          if [ $env == "staging" && $event == "merge_group" ]; then
            continue = true
          elif [ $env == "production" && $event == "push" ]; then
            continue = true
          elif [ $env == "development" && $event == "workflow_dispatch" ]; then
            continue = true
          fi

          if [ $continue == false ]; then
            echo "Skipping deployment"
          fi

          echo "continue=$continue" >> $GITHUB_OUTPUT

          exit 1
      - uses: actions/checkout@v2
      - id: build
        if: ${{ steps.check.outputs.continue == 'true' }}
        uses: ./.github/actions/build
        with:
          push: true
          username: ${{ github.actor}}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Deploy
        if: ${{ steps.check.outputs.continue == 'true' }}
        uses: ./.github/actions/deploy
        with:
          environment: ${{ matrix.environment }}
          token: ${{ secrets.FLY_TOKEN }}
          image: ${{ steps.build.outputs.tags }}
