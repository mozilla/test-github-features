name: Default

on:
  release:
    types: [published, deleted]
  push:
    branches:
      - main
  pull_request:
  workflow_dispatch:
    inputs:
      boolean:
        description: 'A boolean input'
        default: true
        required: true
        type: boolean
      number:
        description: 'A number input'
        default: 0
        required: true
        type: number
      string:
        description: 'A string input'
        default: 'foo'
        required: true
        type: string
      optional:
        description: 'An optional input'
        default: 'fallback'
        required: false
        type: string

concurrency:
  group: ${{ github.event_name }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  context:
    runs-on: ubuntu-latest

    outputs:
      boolean: ${{ fromJson(steps.inputs.outputs.boolean) }}
      number: ${{ fromJson(steps.inputs.outputs.number) }}
      string: ${{ steps.inputs.outputs.string }}
      optional: ${{ steps.inputs.outputs.optional }}

    steps:
      - uses: actions/checkout@v4
      - uses: ./.github/actions/context

      - id: inputs
        shell: bash
        run: |
          echo "boolean=${{ inputs.boolean || false }}" >> $GITHUB_OUTPUT
          echo "number=${{ inputs.number || 10 }}" >> $GITHUB_OUTPUT
          echo "string=${{ inputs.string || 'goodbye' }}" >> $GITHUB_OUTPUT
          echo "optional=${{ inputs.optional }}" >> $GITHUB_OUTPUT

  fail:
    runs-on: ubuntu-latest
    steps:
      - name: Fail
        run: |
          echo "This is a failure"
          exit 1

  # call_worker:
  #   needs: context
  #   uses: ./.github/workflows/worker.yml
  #   secrets:
  #      token: ${{ github.token }}
  #   with:
  #     boolean: ${{ fromJson(needs.context.outputs.boolean) }}
  #     number: ${{ fromJson(needs.context.outputs.number) }}
  #     string: ${{ needs.context.outputs.string }}
  #     optional: ${{ needs.context.outputs.optional }}

  # read_worker:
  #   needs: call_worker
  #   runs-on: ubuntu-latest

  #   steps:
  #     - shell: bash
  #       run: |
  #         cat <<EOF
  #         ${{ toJson(needs.call_worker) }}
  #         EOF
